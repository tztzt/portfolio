{"version":3,"sources":["Header/Header.tsx","About/About.tsx","Education/Item/Modules.tsx","Education/Education.tsx","Projects/TableView/data.tsx","Projects/TableView/SortableGroup/SortableItem.tsx","Projects/TableView/SortableGroup/SortableGroup.tsx","Projects/TableView/TableView.tsx","Projects/Projects.tsx","Work/WorkInfo/WorkInfo.tsx","Work/Work.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Header","basename","className","to","About","src","process","alt","url","Modules","props","ModulesInfo","data","modules","nus","myKeys","forEach","value","key","push","last_item_index","length","i","map","item","module_list","get","s","school","major","Accordion","defaultActiveKey","Card","Toggle","as","eventKey","Collapse","Body","Education","nus_modules","Map","student_alice","student_ben","students","SortableItem","useSortable","id","column","attributes","listeners","setNodeRef","transform","transition","style","CSS","Transform","toString","type","ref","Form","Check","inline","label","getToggleHiddenProps","SortableGroup","useState","headers","columns","setColumns","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","modifiers","restrictToParentElement","collisionDetection","closestCenter","onDragEnd","event","active","over","oldItem","filter","col","oldIndex","indexOf","newItem","newIndex","arrayMove","items","strategy","verticalListSortingStrategy","Table","sortable_columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","allColumns","getToggleHideAllColumnsProps","DropdownButton","size","menuAlign","variant","title","headerGroup","getHeaderGroupProps","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","TableView","table_columns","col_set","Set","accessor","add","STUDENTS","temp_std","student_name","v","k","has","Projects","WorkInfo","DetailedInfo","job_desc","company","first","defaultProps","Work","a_job","d_job","App","exact","path","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59c0999d.chunk.js","sourcesContent":["import \"./Header.scss\"\r\nimport {\r\n    HashRouter as Router,\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <Router basename=\"/\">\r\n            <div className=\"header-row\">\r\n                <div className=\"header-buttons\">\r\n                    <Link to=\"/education\">\r\n                        <button className=\"buttons\">\r\n                            Education and Projects\r\n                    </button>\r\n                    </Link>\r\n                    <Link to=\"/work\">\r\n                        <button className=\"buttons\">\r\n                            Work Experience\r\n                    </button>\r\n                    </Link>\r\n                    <Link to=\"/projects\">\r\n                        <button className=\"buttons\">\r\n                            Projects/Works\r\n                    </button>\r\n                    </Link>\r\n                    <Link to=\"/\">\r\n                        <button className=\"buttons\">\r\n                            About Me\r\n                    </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import './About.scss'\r\n// @ts-ignore\r\nimport { SocialIcon } from 'react-social-icons';\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"my-row\">\r\n                <div className=\"display-pic\">\r\n                    <img className=\"picture\" src={process.env.PUBLIC_URL + '/photo1.jpg'} alt=\"\" />\r\n                </div>\r\n                <div className=\"about-content\">\r\n                    <div className=\"about-info\">\r\n                        Name: Zhi Thon <br />\r\n                        Major: Computer Engineering (Bachelor of Engineering) <br />\r\n                        Graduating: August 2021 \r\n                    </div>\r\n                    <div className=\"about-me\">\r\n                        Young, aspiring developer hoping to better our every day lives one line of code at a time. <br />\r\n                        I am all about the efficiency and optimisation of code and solutions, problem solving is my drug. <br />\r\n                        When I am not hard at work, you can find me chilling on video games, pc games or board games with friends, gamer of all sorts!\r\n                    </div>\r\n                    <div className=\"social-media-links\">\r\n                        <SocialIcon url=\"https://linkedin.com/in/teh-zhi-thon/\" />\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import './Modules.scss'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\ninterface Props {\r\n    school: string,\r\n    major: string,\r\n    nus: boolean,\r\n    modules: any;\r\n}\r\n\r\nfunction Modules(props: Props) {\r\n\r\n    function ModulesInfo() {\r\n        const data = props.modules\r\n\r\n        if (props.nus === true) {\r\n            let myKeys: string[] = []\r\n            data.forEach((value: string[], key: string) => myKeys.push(key));\r\n            let last_item_index = myKeys.length\r\n            let i = 0;\r\n            return <div>\r\n                {\r\n                    myKeys.map((item: string) => {\r\n                        i++\r\n                        const module_list = data.get(item)\r\n                        return <div>\r\n                            <div className=\"title-item\"> {item} </div>\r\n                            {module_list.map(function (s: string) {\r\n                                return <li>{s}</li>;\r\n                            })}\r\n                            {\r\n                                i !== last_item_index ? <br /> : <div />\r\n                            }\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        } else {\r\n            return <div>\r\n                {props.modules.map(function (s: any) {\r\n                    return <li>{s}</li>;\r\n                })}\r\n            </div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"item-row\">\r\n            <div className=\"item-card\">\r\n                <div className=\"school\">\r\n                    {props.school}\r\n                </div>\r\n                <div className=\"major\">\r\n                    {props.major}\r\n                </div>\r\n                {\r\n                    props.nus === true ?\r\n                        <Accordion defaultActiveKey=\"0\">\r\n                            <Card className=\"accordion-header\">\r\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"card-bottom\" >\r\n                                    Modules/Subjects Taken\r\n                            </ Accordion.Toggle>\r\n                                <Accordion.Collapse className=\"modules-body\" eventKey=\"0\">\r\n                                    <Card.Body >\r\n                                        <ModulesInfo />\r\n                                    </Card.Body>\r\n                                </ Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                        : <Accordion>\r\n                            <Card className=\"accordion-header\">\r\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"card-bottom\" >\r\n                                    Modules/Subjects Taken\r\n                            </ Accordion.Toggle>\r\n                                <Accordion.Collapse className=\"modules-body\" eventKey=\"0\">\r\n                                    <Card.Body >\r\n                                        <ModulesInfo />\r\n                                    </Card.Body>\r\n                                </ Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modules;\r\n","import './Education.scss'\r\nimport Item from './Item/Modules'\r\n\r\nfunction Education() {\r\n\r\n    const nus_modules = new Map(\r\n        [\r\n            [\"Algorithms and Data Structures\",\r\n                [\r\n                    \"CS1231 - Discrete Structures\",\r\n                    \"CS2040C - Data Structures and Algorithms\",\r\n                    \"CS3230 - Design and Analysis of Algorithms (Exchange Programme)\",\r\n                    \"CS4231 - Parallel and Distributed Algorithms\",\r\n                ],\r\n            ],\r\n            [\"Coding and Programming Principles\",\r\n                [\r\n                    \"CS1010 - Programming Methodology\",\r\n                    \"CS2113T - Software Engineering and Object-Oriented Programming\",\r\n                    \"CS3210 - Parallel Computing (Exchange)\",\r\n                ]\r\n            ],\r\n            [\"Database Design\",\r\n                [\r\n                    \"CS2102 - Database Systems\",\r\n                    \"CS3223 - Database Systems Implementations (Exchange)\",\r\n                ]\r\n            ],\r\n            [\"Other Modules\",\r\n                [\r\n                    \"CS2107 - Introduction to Information Security\",\r\n                    \"CS3243 - Introduction to Artificial Intelligence (Exchange)\",\r\n                    \"CG4002 - Computer Engineering Capstone Project\",\r\n                    \"CS4225 - Big Data Systems for Data Science\"\r\n                ]\r\n            ]\r\n        ]\r\n    )\r\n\r\n    const jc_modules = [\"H2 Mathematics\",\r\n        \"H2 Chemistry\",\r\n        \"H2 Physics\",\r\n        \"H1 Economics\"]\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <Item school=\"National University of Singapore (Aug 2017 - May 2021)\" major=\"Bachelor of Engineering (Computer Engineering)\" nus={true} modules={nus_modules} />\r\n            <Item school=\"Serangoon Junior College (2013 - 2014)\" major=\"Science Stream (3H2s)\" nus={false} modules={jc_modules} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Education;\r\n","\r\nconst student_alice = new Map([\r\n    [\"Principles of Economics\", \"B+\"],\r\n    [\"Microeconomic Analysis I\", \"A\"],\r\n    [\"Macroeconomic Analysis I\", \"A-\"],\r\n    [\"Financial Accounting for Economists\", \"A\"],\r\n    [\"Econometrics I\", \"B\"],\r\n    [\"Programming Methodology\", \"B\"]\r\n])\r\n\r\nconst student_ben = new Map([\r\n    [\"Principles of Economics\", \"A+\"],\r\n    [\"Microeconomic Analysis I\", \"A\"],\r\n    [\"Programming Methodology\", \"A-\"],\r\n    [\"Data Structures and Algorithms\", \"A\"],\r\n    [\"Software Engineering and Object-oriented Programming\", \"A+\"],\r\n    [\"Data Structures and Algorithms II\", \"A+\"],\r\n])\r\n\r\nconst student_carol = new Map([\r\n    [\"Programming Methodology\", \"B-\"],\r\n    [\"Linear Algebra for Engineering\", \"A\"],\r\n    [\"Engineering Calculus\", \"A-\"],\r\n    [\"French Language 1\", \"B+\"],\r\n    [\"Signals and Systems\", \"A+\"],\r\n    [\"Digital Design\", \"B\"],\r\n])\r\n\r\nconst student_daniel = new Map([\r\n    [\"Linear Algebra for Engineering\", \"A\"],\r\n    [\"Chemical Engineering Principles\", \"B+\"],\r\n    [\"Engineering Calculus\", \"A-\"],\r\n    [\"Digital Design\", \"B\"],\r\n    [\"German Language 1\", \"A+\"],\r\n    [\"Korean Language 1\", \"A\"]\r\n])\r\n\r\nconst students = new Map(\r\n    [\r\n        [\r\n            student_alice, \"Alice Johnson\"\r\n        ],\r\n        [\r\n            student_ben, \"Ben Wattson\"\r\n        ],\r\n        // [\r\n        //     student_carol, \"Carol Summers\"\r\n        // ],\r\n        // [\r\n        //     student_daniel, \"Daniel Anderson\"\r\n        // ],\r\n    ]\r\n)\r\n\r\nexport { students }","import './SortableItem.scss'\r\nimport { useSortable } from '@dnd-kit/sortable';\r\nimport { CSS } from '@dnd-kit/utilities';\r\nimport Form from 'react-bootstrap/Form'\r\nimport { BsFillGridFill } from \"react-icons/bs\";\r\n\r\ninterface Props {\r\n  column: any\r\n}\r\n\r\nexport function SortableItem(props: Props) {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n  } = useSortable({ id: props.column.id });\r\n\r\n  const style: any = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition,\r\n\r\n  };\r\n\r\n  const type: any = 'checkbox'\r\n\r\n  return (\r\n    <div className=\"sortable-item\" ref={setNodeRef} style={style} >\r\n      <Form>\r\n        <Form.Check\r\n          inline\r\n          type={type}\r\n          label={props.column.Header}\r\n          id={`${props.column.id}-${type}`}\r\n          {...props.column.getToggleHiddenProps()}\r\n        />\r\n        <BsFillGridFill className=\"icon-style\" {...listeners} {...attributes} />\r\n      </Form>\r\n    </div>\r\n  );\r\n}","\r\nimport React, { useState } from 'react';\r\nimport {\r\n    DndContext,\r\n    closestCenter,\r\n    KeyboardSensor,\r\n    PointerSensor,\r\n    useSensor,\r\n    useSensors,\r\n} from '@dnd-kit/core';\r\nimport {\r\n    arrayMove,\r\n    SortableContext,\r\n    sortableKeyboardCoordinates,\r\n    verticalListSortingStrategy,\r\n} from '@dnd-kit/sortable';\r\nimport {\r\n    restrictToParentElement,\r\n} from '@dnd-kit/modifiers';\r\n\r\nimport { SortableItem } from './SortableItem';\r\n\r\ninterface Props {\r\n    headers: any[];\r\n}\r\n\r\nexport default function SortableGroup(props: Props) {\r\n\r\n    const [columns, setColumns] = useState(props.headers);\r\n    const sensors = useSensors(\r\n        useSensor(PointerSensor),\r\n        useSensor(KeyboardSensor, {\r\n            coordinateGetter: sortableKeyboardCoordinates,\r\n        })\r\n    );\r\n\r\n    return (\r\n        <DndContext\r\n            modifiers={[restrictToParentElement]}\r\n            sensors={sensors}\r\n            collisionDetection={closestCenter}\r\n            onDragEnd={handleDragEnd}\r\n        >\r\n            <SortableContext\r\n                items={columns}\r\n                strategy={verticalListSortingStrategy}\r\n            >\r\n                {columns.map(column => <SortableItem key={column.id} column={column} />)}\r\n            </SortableContext>\r\n        </DndContext>\r\n    );\r\n\r\n    function handleDragEnd(event: any) {\r\n        const { active, over } = event;\r\n\r\n        if (active.id !== over.id) {\r\n            setColumns((columns) => {\r\n                let oldItem = columns.filter(col => {\r\n                    return col.id === active.id\r\n                  })\r\n\r\n                const oldIndex = columns.indexOf(oldItem[0]);\r\n                let newItem = columns.filter(col => {\r\n                    return col.id === over.id\r\n                  })\r\n                const newIndex = columns.indexOf(newItem[0]);\r\n                return arrayMove(columns, oldIndex, newIndex);\r\n            });\r\n        }\r\n    }\r\n}","import './TableView.scss'\r\nimport React from 'react'\r\nimport { useTable } from 'react-table'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport { students as STUDENTS } from './data'\r\nimport SortableGroup from './SortableGroup/SortableGroup'\r\nimport { FiSettings } from 'react-icons/fi'\r\n\r\nexport interface Column {\r\n    Header: string,\r\n    accessor: string,\r\n}\r\n\r\ninterface Student {\r\n    student_name: string,\r\n    [key: string]: any\r\n}\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }: any, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef: any = ref || defaultRef\r\n\r\n        React.useEffect(() => {\r\n            resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n\r\n        return <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n    }\r\n)\r\n\r\nfunction Table({ columns, data, sortable_columns }: { columns: any, data: any, sortable_columns: any }) {\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        allColumns,\r\n        getToggleHideAllColumnsProps,\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"table-setting-btn\">\r\n                <DropdownButton\r\n                    className=\"ddown z-depth-5\"\r\n                    size=\"sm\"\r\n                    menuAlign=\"right\"\r\n                    variant=\"secondary\"\r\n                    title={<FiSettings />}\r\n                    id=\"dropdown-menu-align-right\"\r\n                >\r\n                    <SortableGroup headers={allColumns} />\r\n                </DropdownButton>\r\n            </div>\r\n\r\n            <table {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row, i) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => {\r\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function TableView() {\r\n\r\n    // 'master' list of column headers - array of objects of type { Header, accessor }\r\n    let table_columns: Column[] = []\r\n\r\n    // list of column headers to pass to sortable flyout to track order - array of strings\r\n    let sortable_columns: string[] = []\r\n\r\n\r\n    let data: any[] = []\r\n\r\n    const col_set = new Set()\r\n\r\n    table_columns.push({ Header: 'Student Name', accessor: 'student_name' })\r\n    sortable_columns.push('Student Name')\r\n    col_set.add('student_name')\r\n\r\n    STUDENTS.forEach((key, value) => {\r\n        let temp_std: Student\r\n        temp_std = { student_name: key }\r\n\r\n        value.forEach((v, k) => {\r\n            temp_std[k] = v\r\n            if (!col_set.has(k)) {\r\n                table_columns.push({ Header: k, accessor: k })\r\n                sortable_columns.push(k)\r\n                col_set.add(k)\r\n            }\r\n        })\r\n        data.push(temp_std)\r\n    })\r\n\r\n    return (\r\n        <div className=\"table-style\">\r\n            <div className=\"table-row\">\r\n                <div className=\"text-container\">\r\n                    Customisable Table Headers\r\n                    <div className=\"sub-text-container\">\r\n                        (Mock of feature done while at Autodesk)\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Table columns={table_columns} data={data} sortable_columns={sortable_columns} />\r\n        </div>\r\n    );\r\n}\r\n","import './Projects.scss'\r\nimport { TableView } from './TableView/TableView'\r\n\r\nfunction Projects() {\r\n    return (\r\n        <div className=\"content\">\r\n            <TableView />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Projects;\r\n","import './WorkInfo.scss'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\ninterface Props {\r\n    company: string,\r\n    title: string,\r\n    job_desc: any,\r\n    first?: boolean\r\n}\r\n\r\nfunction WorkInfo(props: Props) {\r\n\r\n    function DetailedInfo() {\r\n        let myKeys: string[] = []\r\n        props.job_desc.forEach((value: string[], key: string) => myKeys.push(key));\r\n        let last_item_index = myKeys.length\r\n        let i = 0;\r\n        return <div>\r\n            {\r\n                myKeys.map((item: string) => {\r\n                    i++\r\n                    const module_list = props.job_desc.get(item)\r\n                    return <div>\r\n                        <div className=\"title-item\"> {item} </div>\r\n                        {module_list.map(function (s: string) {\r\n                            return <li>{s}</li>;\r\n                        })}\r\n                        {\r\n                            i !== last_item_index ? <br /> : <div />\r\n                        }\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"item-row\">\r\n            <div className=\"item-card\">\r\n                <div className=\"school\">\r\n                    {props.company}\r\n                </div>\r\n                <div className=\"major\">\r\n                    {props.title}\r\n                </div>\r\n                {\r\n                    props.first === true ?\r\n                        <Accordion defaultActiveKey=\"0\">\r\n                            <Card className=\"accordion-header\">\r\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"card-bottom\" >\r\n                                    Job Responsibilities and Work Completed\r\n                        </ Accordion.Toggle>\r\n                                <Accordion.Collapse className=\"modules-body\" eventKey=\"0\">\r\n                                    <Card.Body >\r\n                                        <DetailedInfo />\r\n                                    </Card.Body>\r\n                                </ Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                        : <Accordion>\r\n                            <Card className=\"accordion-header\">\r\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"card-bottom\" >\r\n                                    Job Responsibilities and Work Completed\r\n                    </ Accordion.Toggle>\r\n                                <Accordion.Collapse className=\"modules-body\" eventKey=\"0\">\r\n                                    <Card.Body >\r\n                                        <DetailedInfo />\r\n                                    </Card.Body>\r\n                                </ Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WorkInfo;\r\n\r\nWorkInfo.defaultProps = { first: false }\r\n","import './Work.scss'\r\nimport WorkInfo from './WorkInfo/WorkInfo'\r\n\r\nfunction Work() {\r\n\r\n    const a_job = new Map(\r\n        [\r\n            [\"Supported the Vault team in development of Vault web application port built on React Typescript and Redux\",\r\n                [\r\n                    \"Creation of a flyout to allow users to customise headers of a displayed table - able to show, hide, sort or filter the collection of headers\",\r\n                    \"Incorporation of keypress interactions to allow users to interact with the abovementioned table using arrow keys - able to navigate the list of tables with up, down and enter key\",\r\n                    \"Handling of minor ticket issues such as CSS styling issues or simple features\",\r\n                    \"Completed 1 major feature, 2 simple features and 2 minor bug fixes over the 6 month period\"\r\n                ],\r\n            ],\r\n            [\"Perform manual regular regression smoke tests on basic features of the Vault desktop application during updates or releases\",\r\n                [\r\n                    \"Test interactions of Vault with other Autodesk products - AutoCAD, Inventor and Revit\",\r\n                    \"Identification of key blocking issues - e.g. unable to save to or open files from server\",\r\n                    \"Completed 8 smoke tests over the 6 month period\"\r\n                ]\r\n            ],\r\n        ]\r\n    )\r\n\r\n    const d_job = new Map(\r\n        [\r\n            [\"Performed API Testing on over 400 APIs used in iOS and Android mobile applications\",\r\n                [\r\n                    \"Load testing of APIs to be able to handle multiple simultaneous requests\",\r\n                    \"Validation of output to ensure received data is in proper JSON format with appropriate output\"\r\n                ],\r\n            ],\r\n            [\"Developed web-based tools on Angular for internal usage to support development teams\",\r\n                [\r\n                    \"Generation of receipt templates for business-to-business transaction usage\",\r\n                    \"Automation of writing of source code files according to templates for easier product scaling\",\r\n                    \"Display of server and client performance statistics - e.g. servers being run on Linux systems\",\r\n                ]\r\n            ],\r\n            [\"Exploration of other possible improvements to the development process\",\r\n                [\r\n                    \"Automation of setup of Docker systems on Linux machinesto host various servers using mySQL, MariaDB\",\r\n                    \"Testing of interaction and usage of and Hasura and GraphQL API to possibly improve application performance\"\r\n                ]\r\n            ],\r\n        ]\r\n    )\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <WorkInfo company=\"Autodesk Asia Pte Ltd (July 2020 - Dec 2020)\"\r\n                title=\"Compulsory 6-month Internship - Software Development and Testing Intern (Vault)\"\r\n                job_desc={a_job}\r\n                first={true}\r\n            />\r\n            <WorkInfo company=\"Deskera Singapore Pte Ltd (May 2019 - Aug 2019)\"\r\n                title=\"Summer Internship - Product Management Intern\"\r\n                job_desc={d_job}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Work;\r\n","import \"./App.scss\";\nimport Header from \"./Header/Header\"\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport About from \"./About/About\"\nimport Education from \"./Education/Education\"\nimport Projects from \"./Projects/Projects\"\nimport Work from \"./Work/Work\"\n\nexport default function App() {\n\n  return (\n    <div>\n      <div className=\"App\">\n        <Header />\n        <div className=\"App-body\">\n          <Router basename=\"/\">\n            <Switch>\n              <Route exact path=\"/\">\n                <About />\n              </Route>\n              <Route path=\"/education\">\n                <Education />\n              </Route>\n              <Route path=\"/projects\">\n                <Projects />\n              </Route>\n              <Route path=\"/work\">\n                <Work />\n              </Route>\n            </Switch >\n          </Router >\n        </div>\n      </div >\n      <footer>\n        This website is an ongoing mini project of mine, you may view the github repo for this project at <a href=\"https://github.com/tztzt/portfolio\"> my github page</a>.\n      </footer>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}